def startingroom():
    print("You wake up in a dark, dirty room.")
    answer=raw_input().lower()
    if answer=="look around":
        print("You sit up and look around. The room is small, about ten by ten. You are sitting on a few blankets piled on the floor in the corner. There is a door across from you, a picture frame leaning against the wall, and a light switch on the wall to your right.")
    else: 
        print("Try looking around")
        startingroom()
startingroom()
def roomaction():
    answer=raw_input().lower()
    if answer=="flip the switch" or answer=="flip the light switch" or answer=="turn on the lights" or answer=="turn on the light" or answer=="turn on light" or answer=="flip switch" or answer=="turn on lights":
        print("The power does not seem to be working.")
        roomaction()
    elif answer=="look at picture" or answer=="look at picture frame" or answer=="pick up picture":
        print("The picture is old and worn, contained in a cracked glass frame. You see yourself, smiling, between an older man and woman.")
        roomaction()
    elif answer=="open the door" or answer=="open door" or answer=="go outside" or answer=="exit room":
        print("You exit the room and enter a long, dim hallway.")
    elif answer=="help":
        print("Try turning on the lights, looking at the picture, or opening the door.")
        roomaction()
    elif answer=="look around":
        print("You sit up and look around. The room is small, about ten by ten. You are sitting on a few blankets piled on the floor in the corner. There is a door across from you, a picture frame leaning against the wall, and a light switch on the wall to your right.")
        roomaction()
    else:
        print("I do not understand")
        roomaction()
roomaction()
def hallwayview():
    answer=raw_input().lower()
    if answer=="look around":
        print("Scanning the hallway, you see that it is lined with closed doors. You try one and find that it is locked. The linoleum floors are dusty, save for a single track of footprints leading to the door you stand in. There is a door standing ajar at the end of the hallway.")
    else:
        print("Try looking around.")
        hallwayview()
hallwayview()
def hallwayaction():
    answer=raw_input().lower()
    if answer=="exit hallway" or answer=="go through door" or answer=="open door" or answer=="open ajar door" or answer=="leave hallway":
        print("You exit through the open door and step out onto a sidewalk.")
    elif answer=="look at footprints":
        print("You look at the footprints and look at your worn sneakers. They appear to be the same size. No one else has been here in a long time.")
        hallwayaction()
    elif answer=="look around":
        print("Scanning the hallway, you see that it is lined with closed doors. You try one and find that it is locked. The linoleum floors are dusty, save for a single track of footprints leading to the door you stand in. There is a door standing ajar at the end of the hallway.")
        hallwayaction()
    elif answer=="help":
        print("try exiting the hallway")
        hallwayaction()
    else:
        print("Try something else")
        hallwayaction()
hallwayaction()
def sidewalkview():
    answer=raw_input().lower()
    if answer=="look around":
        print("It is a bright, sunny day outside, but not many people seem to be around. You wonder why they have all stayed indoors. All around you are dirty, blockish buildings. The street is covered with litter. Across from you is a convenience store that appears to be open, the only one of its kind. The building you have just came from is a crumbling, 3 story brick apartment building. You see a sign on the door.")
    else:
        print("Try looking around.")
        sidewalkview()
sidewalkview()
def sidewalkaction():
    answer=raw_input().lower()
    if answer=="look at sign" or answer=="look at door sign" or answer=="read sign":
        print("The sign reads \"Notice of Demolition: Sunnybrook apartments is scheduled for demolition on Tuesday the fifth.\" That is tomorow.")
        sidewalkaction()
    elif answer=="go into store" or answer=="go into convenience store" or answer=="go to convenience store" or answer=="go to store":
        print("""You walk into the convenience store across the street. There is a single blonde man at the register and no one else in the store. Feeling quite hungry, you begin to browse the aisles. "Hey!" You hear. "I don't want any trouble. Seek the golden gate somewhere else." There is no one else in the store. What is he talking about? Is he talking to you? You peer around the side of a shelf to see. The man looks angry, but also scared. You are scared now too. His hand creeps under the register. You should probably leave and find help.""")
    elif answer=="help":
        print ("Try looking at the sign or going into the store.")
        sidewalkaction()
    else:
        print("Try something else.")
        sidewalkaction()
sidewalkaction()
def convenience():
    answer=raw_input().lower()
    if answer=="leave store" or answer=="exit store" or answer=="leave the store" or answer=="leave":
        print("You quickly slip out of the store, feeling the man's eyes on you the whole way. His unfounded hostility was unsettling. And what was he even talking about? You look around for a place to go and see that there is a police station at the end of the block. You head towards it. When you get there, you stand at the enterance.")
    elif answer=="help":
        print("That guy seemed on edge. You should probably leave the store.")
        convenience()
    else:
        print("Try something else.")
convenience()
def station():
    answer=raw_input().lower()
    if answer=="go inside" or answer=="go into station" or answer=="enter station" or answer=="go into police station" or answer=="enter police station":
        print("You push open the glass doors and enter the station.")
    elif answer=="help":
        print("You should go inside to get help.")
        station()
    else:
        print("Try something else.")
        station()
station()
def stationview():
    answer=raw_input().lower()
    if answer=="look around":
        print("There is a desk to your left for inquiries and general assistance with a bored looking receptionist. There are a few chairs in the front, and a policeman sits in one of them, drinking a coffee. Everywhere else, policemen and plainclothes workers are walking hurredly back and forth.")
    else:
        print("Try looking around.")
        stationview()
stationview()
def stationaction():
    answer=raw_input().lower()
    if answer=="go to desk" or answer=="go to receptionist" or answer=="talk to receptionist":
        print("""You go up to the receptionist's desk and ask to file a report about threatening behavior. He looks up lazily, then begins to fill out a sheet of paper for you. You ask about the man's golden gate comment. "What do you mean 'what's the golden gate?' It's opportunity, the dream! Now, what exactly did this guy do?" He asks. You tell him about the unfounded threats and the possiblility of violence. "Well that seems odd. At the convenience store? That's Larry, I've known him all my life. He'd never do anything to hurt someone, gentle as a lamb. Are you sure you weren't doing anything suspicious or odd? It's his right to protect his store, I mean we've all had trouble with your kind of...uh, you know, the kind of folks around here in the past. Look, filing a report is really complicated, you probably don't want to go to the trouble. Why don't you just run on home. We're a call away." You're getting nowhere here. You should probably leave.""")
    elif answer=="go to policeman" or answer=="talk to policeman" or answer=="talk with policeman":
        print("""You go up to the policeman's chair and ask to talk with him about the man's threatening behavior. He look annoyed, but agrees to listen to your complaint. You ask about the man's golden gate comment. "What do you mean 'what's the golden gate?' It's opportunity, the dream! Now, what exactly did this guy do?" He asks. You tell him about the unfounded threats and the possiblility of violence. "Well that seems odd. At the convenience store? That's Larry, I've known him all my life. He'd never do anything to hurt someone, gentle as a lamb. Are you sure you weren't doing anything suspicious or odd? It's his right to protect his store, I mean we've all had trouble with your kind of...uh, you know, the kind of folks around here in the past. Look, filing a report is really complicated, you probably don't want to go to the trouble. Why don't you just run on home. We're a call away." You're getting nowhere here. You should probably leave.""")
    elif answer=="sit down" or answer=="sit in chair" or answer=="sit in chairs":
        print("You're getting nowhere by sitting. Get up and talk to someone")
        stationaction()
    elif answer=="help":
        print("Try talking to the receptionist or talking to the policeman")
    else:
        print("You should talk to someone")
        stationaction()
stationaction()
def leavestation():
    answer=raw_input().lower()
    if answer=="leave station" or answer=="exit station" or answer=="go outside":
        print("You exit the station to go back outside. The comments bothered you. And more than that, you're very curious about this golden gate now. They acted like you were an idiot for not knowing. You have to talk to people, you decide. There's a group of kids playing plastic bucket drums on the corner, and an old woman sitting on a bench on the other side of the street.")
    elif answer=="help":
        print("Try leaving the station")
        leavestation()
    else:
        print("Try something else")
        leavestation()
leavestation()
def talkingone():
    answer=raw_input().lower()
    if answer=="talk to kids" or answer=="go to kids" or answer=="talk with kids":
        print("""You ask the group of kids what they know about this golden gate. They laugh. "Oh, it's right over there!" One of them says, pointing left. "But good luck trying to get to it! Not within 20 feet when you're like us. Hah! Waste of your time. Who says getting past is better anyways? Come, play with us instead, we have some sticks!" You politely decline. There is still the old woman on the bench across the street.""")
    elif answer=="talk to woman" or answer=="talk to old woman" or answer=="talk with old woman" or answer=="go to woman" or answer=="go to old woman":
        print("""You sit down next to the woman on the bench and ask what she can tell you about the golden gate. "I was in and out of there plenty of time in my day," she says. "I'm only on this side because my husband died a few years ago and I couldn't work anymore. But it's beautiful over there, past the gate. You're young and good looking, they might let you through. You should try at least. They say anyone can pass through in this country, given enough time. I just have too much. Too much time." She sighs. "It's a beautiful day to try though. May as well walk through the park on the way." The park is off to your left, but the kids are still playing drums across the street.""")
    elif answer=="help"
        print("Try talking to the woman or talking to the kids")
        talkingone()
    else:
        print("Try something else")
talkingone()
def talkingtwo():
    answer=raw_input().lower()
    if answer=="talk to kids" or answer=="go to kids" or answer=="talk with kids":
        print("""You ask the group of kids what they know about this golden gate. They laugh. "Oh, it's right over there!" One of them says, pointing left. "But good luck trying to get to it! Not within 20 feet when you're like us. Hah! Waste of your time. Who says getting past is better anyways? Come, play with us instead, we have some sticks!" You politely decline. In the direction they pointed, there is a park you can go through.""")
    elif answer=="talk to woman" or answer=="talk to old woman" or answer=="talk with old woman" or answer=="go to woman" or answer=="go to old woman":
        print("""You sit down next to the woman on the bench and ask what she can tell you about the golden gate. "I was in and out of there plenty of time in my day," she says. "I'm only on this side because my husband died a few years ago and I couldn't work anymore. But it's beautiful over there, past the gate. You're young and good looking, they might let you through. You should try at least. They say anyone can pass through in this country, given enough time. I just have too much. Too much time." She sighs. "It's a beautiful day to try though. May as well walk through the park on the way." The park is off to your left.""")
    elif answer=="help"
        print("Try talking to the woman or talking to the kids")
        talkingtwo()
    elif answer=="walk through park" or answer=="go through park" or answer=="go to park":
        print("You should talk to everyone first")
        talkingtwo()
    else:
        print("Try something else")
        talkingtwo()
talkingtwo()
def park():
    answer=raw_input().lower()
    if answer=="walk through park" or answer=="go through park" or answer=="go to park":
        print("You walk left and step into the park. It's lovely and peaceful, very green and grassy, and filled with willow trees. The trees are too thick to see anything else ahead yet, so you don't know if you're going in the right direction to find this gate. You see a young woman up ahead on your right. You could stop and ask her, or just keep going.")
    elif answer=="help":
        print("Try walking through the park")
        park()
    else:
        print("Try something else")
        park()
park()
def lastquestion():
    answer=raw_input().lower()
    if answer=="stop and ask her" or answer=="ask her" or answer=="stop" or answer=="stop and ask":
        print("""You walk up to the woman. "Am I going the right way to the gate?" you ask. "That depends." She's been crying. "Not when you--just fuck their opportunity. Fuck the lies. I was so young when I came...I have to go." She walks away. You continue forward, unsettled. You follow a narrow dirt path into a green valley, and when you climb back up, the trees are clear enough to view the horizon. And you see it. A shining, shimmering golden veil, seperating the park from whatever is on the other side, magnificent in the sunlight. You can't really tell if it's a gate or a wall. You want to take a closer look.""")
    elif answer=="keep going":
        print("You continue forward. You follow a narrow dirt path into a green valley, and when you climb back up, the trees are clear enough to view the horizon. And you see it. A shining, shimmering golden veil, seperating the park from whatever is on the other side, magnificent in the sunlight. You can't really tell if it's a gate or a wall. You want to take a closer look.")
    elif answer=="help"
        print("Try to stop and ask her or keep going")
        lastquestion()
    else:
        print("Try something else")
        lastquestion()
lastquestion()
def gateview():
    answer=raw_input().lower()
    if answer=="take a look" or answer=="take a closer look" or answer=="look at gate" or answer=="look around":
        print("""Looking at the golden gate, you see that it streches up and to the sides as far as you can see. The surface is rippling and slightly sheer, so you can just make out a shining city silhouetted by the sun on the other side. The towers are tall and vital, the antithesis of the crumbling ruins you just walked away from. The sound of traffic and faint smell of bakeries drifts over from the other side. You reach out to touch the gate. "You cannot do that." says a voice. You do not know where it came from. "Hello?" you ask. "Hello," it replies. "I am the gatekeeper, Version 2.43.7, all rights reserved. Use the command "list" to know what you may ask me."""")
    elif answer=="help":
        print("Try to look at the gate or take a look")
        gateview()
    else:
        print("Try something else")
        gateview()
gateview()
def list():
    answer=raw_input().lower()
    if answer=="list":
        print("Welcome to the gatekeeper system, property of the Bureau of Domestic Immigration. 'Licensing' tells you about my current version status and copyright. 'Travel status' gives your current Dream Act standing, and whether you're cleared to pass the gate. 'Function' tells you my duties and legal scope. 'Fees' states the current gate tourism rates. Use 'exit' at any time to exit the command menu, or 'list' to repeat this message.")
    else:
        print("Use 'list' to query the gatekeeper")
        list()
list()
def listfunctions():
    answer=raw_input().lower()
    if answer=="licensing":
        print("I am the gatekeeper, Version 2.43.7, all rights reserved. All software, products, and product derivitives associated with the gatekeeper are property of the Bureau of Domestic Immigration, a subcommitte of the Department of Homeland Security. All data within the gatekeeper database, including but not limited to that derived from census, social security, web queries, and cellular devices is property of the BDI. This is a full lifetime domestic license.")
        listfunctions()
    elif answer=="travel status":
        print("User 2144xv. Documentation: Verified. Dream Act status: Incomplete. Clearance: User 2144xv is not cleared for permanent passage due to judicial, education and financial history. Tourism up to 5 consecutive days permitted.")
        listfunctions()
    elif answer=="function":
        print("My responsibilities include but are not limited to: monitering the internal border, holding records of domestic clearance and dream act status, and enforcing domestic and international immigration policies. The gatekeeper system is authorized to check, question, and detain persons of interest for a time period up to but not exceeding 30 days, with or without proper judicial clearance or probable cause.")
    elif answer=="fees":
        print("The current fees for tourism into the golden sector are $4,500 per day. The Bureau of Domestic immegration encourages tourism, and reminds its people that the dream is for everyone in our country.")
        listfunctions()
    elif answer=="list":
        print("Welcome to the gatekeeper system, property of the Bureau of Domestic Immigration. 'Licensing' tells you about my current version status and copyright. 'Travel status' gives your current Dream Act standing, and whether you're cleared to pass the gate. 'Function' tells you my duties and legal scope. 'Fees' states the current gate tourism rates. Use 'exit' at any time to exit the command menu, or 'list' to repeat this message.")
        listfunctions()
    elif answer=="exit"
        print("Command menu terminated")
    else:
        print("I do not understand")
        listfunctions()
listfunctions()
def finalquestion():
    print("Thank you for using my interactive menu. If you have questions about your golden gate clearance status, use command 'status detail' at any time. Have a nice day.")
    answer=raw_input().lower()
    if answer=="status detail"
        print("User 2144xv: Your education and income statuses do not meet the minimum threshold for national golden sector clearance. Additionally, your past judicial record has incurred a penalty of a 33% threshold raise. Your records indicate numerous queries regarding golden gate passage. Further querying and appeals are strongly discouraged until individual action is taken to remedy your education and income discrepancies. There are fee-based programs available to help you. Please leave the area now. There is nothing for you here.")
    else:
        print("The machine does not understand you")
        finalquestion()
finalquestion()
def finalone():
    answer=raw_input().lower()
    if answer=="help"
        print("There is no more help. There is nothing for you here.")
    else:
        print("There is nothing for you here.")
finalone()
